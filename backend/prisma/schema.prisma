// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  JUDGE
  PARTICIPANT
}

enum Verdict {
  ACCEPTED
  REJECTED
  PENDING
}

model User {
  id          String      @id @default(uuid())
  username    String      @unique
  password    String
  role        Role
  submissions Submission[]
  scoreEvents ScoreEvent[]
  auditLogs   AuditLog[]
  seat        Seat?
}

model Problem {
  id                String       @id @default(uuid())
  title             String
  description       String
  difficulty        String
  points            Float
  test_cases        Json
  hidden_judge_notes String?
  submissions       Submission[]
}

model Submission {
  id           String    @id @default(uuid())
  problemId    String
  userId       String
  language     String
  code         String
  status       Verdict
  attemptCount Int
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  problem      Problem   @relation(fields: [problemId], references: [id])
  user         User      @relation(fields: [userId], references: [id])
  scoreEvent   ScoreEvent?
}

model ScoreEvent {
  id          String   @id @default(uuid())
  submissionId String   @unique
  points      Float
  acceptedAt  DateTime @default(now())
  submission  Submission @relation(fields: [submissionId], references: [id])
  user        User     @relation(fields: [userId], references: [id])
  userId      String
}

model AuditLog {
  id        String   @id @default(uuid())
  actor     String
  entity    String
  ip        String
  timestamp DateTime @default(now())
  details   Json
  user      User     @relation(fields: [userId], references: [id])
  userId    String
}

model Seat {
  id            String @id @default(uuid())
  pc_access_code String @unique
  ip_address    String
  userId        String @unique
  user          User   @relation(fields: [userId], references: [id])
}